name: 무작위 리뷰어 할당

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  assign-reviewers:
    runs-on: ubuntu-latest

    steps:
      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Select Random Reviewers
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          # PR 정보 가져오기
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_LINK="${{ github.event.pull_request.html_url }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"

          # JSON 형식으로 리뷰어 데이터 정의
          REVIEWER_DATA='{
            "reviewers": [
              {"github": "Dream-no24", "discord": "543412284823830542", "slack": "U0815U6D5FA"},
              {"github": "depave", "discord": "390393061462638592", "slack": "U081Q5QNJQY"},
              {"github": "this-yujunkim", "discord": "345678901234567890", "slack": "U080VNUFAB0"},
              {"github": "gmvolt", "discord": "456789012345678901", "slack": "U080YD1SB9B"},
              {"github": "Jangjimin9766", "discord": "622289999471181824", "slack": "U081BSNUM6Y"},
              {"github": "HSHyun", "discord": "1234432353859010600", "slack": "U080LVALFHV"},
              {"github": "NaJhinY", "discord": "309497537696628746", "slack": "U081N2GPY8H"}
            ]
          }'

          # PR 작성자를 제외한 리뷰어 필터링
          FILTERED_REVIEWERS=$(echo "$REVIEWER_DATA" | jq -c --arg PR_AUTHOR "$PR_AUTHOR" \
            '.reviewers | map(select(.github != $PR_AUTHOR))')
          echo "필터링된 리뷰어: $FILTERED_REVIEWERS"

          # PR 제목에서 '#M' 패턴 찾기
          if [[ "$PR_TITLE" =~ \#M$ ]]; then
            echo "리뷰어 자동 할당이 비활성화되었습니다."
            exit 0
          fi

          # PR 제목에서 '#n' 패턴 찾기
          if [[ "$PR_TITLE" =~ \#([0-9]+)$ ]]; then
            NUM_REVIEWERS=${BASH_REMATCH[1]}
            echo "지정된 리뷰어 수: $NUM_REVIEWERS"
          else
            NUM_REVIEWERS=2
            echo "리뷰어 수가 명시되지 않았으므로 기본값 $NUM_REVIEWERS명을 선택합니다."
          fi

          # 무작위 리뷰어 선택
          SELECTED_REVIEWERS=$(echo "$FILTERED_REVIEWERS" | jq -c --argjson NUM_REVIEWERS "$NUM_REVIEWERS" \
            'sort_by(.github) | .[:$NUM_REVIEWERS]')
          echo "선택된 리뷰어: $SELECTED_REVIEWERS"

          # GitHub 리뷰어 JSON 생성
          GITHUB_REVIEWERS=$(echo "$SELECTED_REVIEWERS" | jq -r '.[].github' | jq -R . | jq -s .)
          echo "GitHub 리뷰어: $GITHUB_REVIEWERS"

          # PR에 리뷰어 지정
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -X POST \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/requested_reviewers" \
               -d "{\"reviewers\": $GITHUB_REVIEWERS}"

          # 디스코드 및 슬랙 멘션 생성
          DISCORD_MENTIONS=$(echo "$SELECTED_REVIEWERS" | jq -r \
            '.[] | "<@" + .discord + ">"' | tr '\n' ' ')
          SLACK_MENTIONS=$(echo "$SELECTED_REVIEWERS" | jq -r \
            '.[] | "<@" + .slack + ">"' | tr '\n' ' ')

          echo "Discord 멘션: $DISCORD_MENTIONS"
          echo "Slack 멘션: $SLACK_MENTIONS"

          # 디스코드 알림 전송
          DISCORD_MESSAGE="리뷰어로 지정되었습니다!\nPR 제목: $PR_TITLE\nPR 링크: $PR_LINK\n리뷰어: ${DISCORD_MENTIONS}"
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"$DISCORD_MESSAGE\"}" \
               $DISCORD_WEBHOOK_URL || echo "Discord 알림 전송 실패"

          # 슬랙 알림 전송
          SLACK_MESSAGE="리뷰어로 지정되었습니다!\nPR 제목: $PR_TITLE\nPR 링크: $PR_LINK\n리뷰어: ${SLACK_MENTIONS}"
          curl -H "Content-Type: application/json" \
               -d "{\"text\": \"$SLACK_MESSAGE\"}" \
               $SLACK_WEBHOOK_URL || echo "Slack 알림 전송 실패"
